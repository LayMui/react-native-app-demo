resources:
  repositories:
  - repository: demo-serenity-appium
    type: github
    endpoint: LayMui
    name: LayMui/demo-serenity-appium
    branch: applitools
    
trigger:
- master


stages:
  -   stage: Build_Test
      displayName: Build and Test artifacts
      jobs:
        -   job: Build_Test
            pool:
              vmImage: 'macOS-latest'

            steps:
            - checkout: self
           
            # - task: CocoaPods@0
            #   inputs:
            #     forceRepoUpdate: true
            # - task: Xcode@5
            #   inputs:
            #     actions: 'build'
            #     sdk: 'iphoneos'
            #     configuration: 'Release'
            #     xcWorkspacePath: 'rnfirstapp.xcworkspace'
            #     scheme: ''
            #     xcodeVersion: 'default'
            #     signingOption: 'default'
            #     useXcpretty: 'false'
            
            # - script: /usr/local/bin/pod install
            #   displayName: 'pod install using a script'
              
            # - task: CocoaPods@0
            #   displayName: 'pod install using CocoaPods task with defaults'   

            # - task: CocoaPods@0
            #   inputs:
            #     forceRepoUpdate: true
            #     projectDirectory: '$(system.defaultWorkingDirectory)'
            #   displayName: 'pod install using CocoaPods task with a forced repo update and a custom project directory'
            # - task: ArchiveFiles@2
            #   inputs:
            #     rootFolderOrFile: '$(agent.buildDirectory)/build/Build/Products/Debug-iphonesimulator/rn-first-app.app'
            #     archiveFile: '$(agent.buildDirectory)/build/rn-first-app.zip'

            # - script: carthage update --platform iOS
            
            # - task: UseRubyVersion@0
            #   inputs:
            #     versionSpec: '>= 2.4'
                
            # - script: |
            #     gem install xcpretty
            #   displayName: 'gem install xcpretty'

            - task: NodeTool@0
              inputs:
                versionSpec: '10.x'
              displayName: 'Install Node.js'

            # - script: npm install
            #   displayName: 'npm install'
            # - script: npm install
            #   displayName: 'Run react-native run-ios'
            
            - bash: |
                npm install -g appium
              displayName: 'install appium'
                
            - script: |
                npm install
              workingDirectory: $(Build.SourcesDirectory)/react-native-app-demo
              displayName: 'npm install'
            
            - script: |
                pod install
                xcodebuild clean archive -workspace rnfirstapp.xcworkspace -scheme "rnfirstapp" -archivePath rnfirstapp.xcarchive
                xcodebuild -exportArchive -archivePath rnfirstapp.xcarchive -exportPath rnfirstapp -exportOptionsPlist ExportOptions.plist | xcpretty
              workingDirectory: $(Build.SourcesDirectory)/react-native-app-demo/ios
              displayName: 'pod install and xcodebuild to build ipa artefact'


            - task: CopyFiles@2
              inputs:
                sourceFolder: $(Build.SourcesDirectory)/react-native-app-demo
                contents: |
                  **
                TargetFolder: $(Build.ArtifactStagingDirectory)
            - task: PublishPipelineArtifact@1
              inputs:
                targetPath: $(Build.ArtifactStagingDirectory)
                artifactName: app-source-folder
            - script: |
                rm -r $(Build.ArtifactStagingDirectory)

            - checkout: demo-serenity-appium
            - script: |
                  ./serenity.sh iOS_realdevice 
                  workingDirectory: $(Build.SourcesDirectory)/demo-serenity-appium
                  displayName: 'run serenity appium test'

 